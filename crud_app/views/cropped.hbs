<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Cropper.js</title>
  <link rel="stylesheet" href="https://unpkg.com/bootstrap@4/dist/css/bootstrap.min.css" crossorigin="anonymous">
  <link rel="stylesheet" href="/css/cropper.css">
  <style>
    .label {
      cursor: pointer;
    }

    .progress {
      display: none;
      margin-bottom: 1rem;
    }

    .alert {
      display: none;
    }

    .img-container img {
      max-width: 100%;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Upload cropped image to server</h1>
    <p>Please note that the image will be uploaded to a <a href="https://jsonplaceholder.typicode.com/">third-party fake API server</a>, which means that the upload process will sometimes fail.</p>
    <label class="label" data-toggle="tooltip" title="Change your avatar">
      {{!-- <img class="rounded" id="avatar" src="/img/uploadImage/1622997153002-girl_205263.jpg" alt="avatar"> --}}
      <img class="rounded" id="avatar" src="{{user.profilePic}}" alt="avatar">
      <input type="file" class="sr-only" id="input" onchange="getFileData(this)" name="image" accept="image/*">
    </label>

    <div class="progress">
      <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
    </div>
    <div class="alert" role="alert"></div>
    <div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="modalLabel">Crop the image</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="img-container">
              <img id="image" src="https://avatars0.githubusercontent.com/u/3456749">
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" id="crop">Crop</button>
            
         <button type="button" onclick="zoomin()"> Zoom In</button>
          <button type="button" onclick="zoomout()"> Zoom Out</button>

          </div>
        </div>
      </div>
    </div>
  </div>
  <button type="delete" 
          onclick="makePUTrequest()" 
          class="btn btn-danger" 
          id="Delete" 
          value="Delete"
          style="display:{{#ifCond  user.profilePic  "/img/user.png"}}none{{else}}block {{/ifCond}}"
          >
          DELETE
  </button>
  <script src="https://unpkg.com/jquery@3/dist/jquery.min.js" crossorigin="anonymous"></script>
  <script src="https://unpkg.com/bootstrap@4/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
  <script src="/js/cropper.js"></script>
  <script>
    function makePUTrequest() {
      var $alert = $('.alert');
      source=document.getElementById("avatar").src
       $.ajax({
           url: '/profilePic/crop',
           method: 'DELETE',
           cache:false,
           data:{"action":"delete"},
           success: function (response) {
               //console.log(response.profilePic)
               document.getElementById("avatar").src=response.profilePic
               document.getElementById("Delete").style.display="none"
               $alert.show().addClass('alert-success').text('delete success');
             },
           error: function (e) {
             console.log(e)
               avatar.src = source;
               $alert.show().addClass('alert-warning').text('delete error');
             },
       });
    }
  </script>
  <script>
    function zoomin() {
      var myImg = document.getElementById("image");
      var currWidth = myImg.clientWidth;
      if (currWidth == 2500) return false;
      else {
        myImg.style.width = (currWidth + 100) + "px";
      }
    }

    function zoomout() {
      var myImg = document.getElementById("image");
      var currWidth = myImg.clientWidth;
      if (currWidth == 100) return false;
      else {
        myImg.style.width = (currWidth - 100) + "px";
      }
    }
  </script>
  <script>
    //unction getFileData(myFile){
     // var file = myFile.files[0];  
     // var filename = file.name;
     // //console.log(filename)
     // $.ajax({
     //   type: "POST",
     //   url: "/crop",
     //   data: {
     //         "name":filename
     //        },
     //   success: function () {
//
     //   },
     //   error: function () {
     //   }
     // })
     // }


    window.addEventListener('DOMContentLoaded', function () {
      var avatar = document.getElementById('avatar');
      var image = document.getElementById('image');
      var input = document.getElementById('input');
      var $progress = $('.progress');
      var $progressBar = $('.progress-bar');
      var $alert = $('.alert');
      var $modal = $('#modal');
      var cropper;
      
      var options = {zoom: function (e) {
          console.log(e.type, e.detail.ratio);
        }}


      $('[data-toggle="tooltip"]').tooltip();

      input.addEventListener('change', function (e) {
        var files = e.target.files;
        window.name=files[0].name //name extraction
        var done = function (url) {
          input.value = '';
          image.src = url;
          $alert.hide();
          $modal.modal('show');
        };
        var reader;
        var file;
        var url;

        if (files && files.length > 0) {
          file = files[0];

          if (URL) {
            done(URL.createObjectURL(file));
          } else if (FileReader) {
            reader = new FileReader();
            reader.onload = function (e) {
              done(reader.result);
            };
            reader.readAsDataURL(file);
          }
        }
      });

      $modal.on('shown.bs.modal', function () {
        cropper = new Cropper(image, {
          aspectRatio: 1,
          viewMode: 3,
          autoCropArea: 0.7,
        });
      }).on('hidden.bs.modal', function () {
        cropper.destroy();
        cropper = null;
      });

      document.getElementById('crop').addEventListener('click', function () {
        var initialAvatarURL;
        var canvas;
        
        $modal.modal('hide');

        if (cropper) {
          canvas = cropper.getCroppedCanvas({
            width: 160,
            height: 160,
          });
          initialAvatarURL = avatar.src;
          avatar.src = canvas.toDataURL();
          $progress.show();
          $alert.removeClass('alert-success alert-warning');
          //canvas.toBlob(function (blob) {
            //var formData = new FormData();
            //formData.append('avatar', blob, 'avatar.jpg');
            $.ajax('/profilePic/crop', {
              method: 'POST',
              async:true,
              cache:false,
              data: {"img":avatar.src,
                    "name":window.name},
              //processData: false,
              //contentType: false,
              success: function () {
                $alert.show().addClass('alert-success').text('Upload success');
              },

              error: function () {
                avatar.src = initialAvatarURL;
                $alert.show().addClass('alert-warning').text('Upload error');
              },

              complete: function () {
                $progress.hide();
              },
            });
         // });
        }
      });
    });
  </script>
</body>
</html>
